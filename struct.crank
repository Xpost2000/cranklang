typedef RenamedInt as int;
typedef Vector : struct {
        x : int = 4;
        y : int = 2;
        z : int = 1;
        test: int[50];
}


// a unique type to Crank
// it's a modern Enum
// typedef TestVariant: variant {
// }

print: extern("printf") int(fmt: char*, ...);

vadd: Vector(a: Vector, b: Vector) {
      return Vector { 1, 2, 3 };
};

main: int(argc: int, arguments: strlit[]) {
      obj: Vector = Vector { 1, 2, 3 };
      // NOTE: this will error right now and that's okay for me
      // I can fix this later.
      // obj2: Vector = Vector { z: 2, y: 4, x: 123 };
      // bit too slow for this one :)
//      print("The object obj is of type %s which has %d members", obj._TypeInfo.typename, obj._TypeInfo.members.count);
      return 0;
};